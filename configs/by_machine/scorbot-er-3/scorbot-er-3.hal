
# kinematics
loadrt genserkins

# motion controller, get name and thread periods from ini file
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES

# standard components
#loadrt pid num_chan=3

# hostmot2 driver
# if you have any firmware trouble, enable the debug flags here and see what's going on in the syslog
#loadrt hostmot2 debug_idrom=1 debug_module_descriptors=1 debug_pin_descriptors=1 debug_modules=1
#loadrt hostmot2

# load low-level driver
#loadrt [HOSTMOT2](DRIVER) config=[HOSTMOT2](CONFIG)


#addf hm2_[HOSTMOT2](BOARD).0.read          servo-thread
addf motion-command-handler                servo-thread
addf motion-controller                     servo-thread
#addf pid.0.do-pid-calcs                    servo-thread
#addf pid.1.do-pid-calcs                    servo-thread
#addf pid.2.do-pid-calcs                    servo-thread
#addf hm2_[HOSTMOT2](BOARD).0.write         servo-thread

loadusr -W scorbot-er-3


#
# E-Stop
#

net estop-loop iocontrol.0.user-enable-out => iocontrol.0.emc-enable-in


#
# Joint 0
#

net j0.cmd <= axis.0.motor-pos-cmd
net j0.cmd => scorbot-er-3.joint0.motor-pos-cmd
net j0.cmd => axis.0.motor-pos-fb

net j0.limit <= scorbot-er-3.joint0.limit-sw
net j0.limit => axis.0.home-sw-in
net j0.limit => axis.0.neg-lim-sw-in
net j0.limit => axis.0.pos-lim-sw-in

setp scorbot-er-3.joint0.scale [AXIS_0]SCALE

#setp  hm2_[HOSTMOT2](BOARD).0.encoder.01.scale  [AXIS_1]INPUT_SCALE
#net motor.01.pos-fb hm2_[HOSTMOT2](BOARD).0.encoder.01.position => pid.1.feedback
#net motor.01.pos-fb => axis.1.motor-pos-fb #push copy back to Axis GUI

#newsig emcmot.01.enable bit
#sets emcmot.01.enable FALSE
#net emcmot.01.enable => pid.1.enable
#net emcmot.01.enable => hm2_[HOSTMOT2](BOARD).0.pwmgen.01.enable
#net emcmot.01.enable <= axis.1.amp-enable-out

# encoder feedback
#setp hm2_[HOSTMOT2](BOARD).0.encoder.01.counter-mode 0
#setp hm2_[HOSTMOT2](BOARD).0.encoder.01.filter 1
#setp hm2_[HOSTMOT2](BOARD).0.encoder.01.index-invert 0
#setp hm2_[HOSTMOT2](BOARD).0.encoder.01.index-mask 0
#setp hm2_[HOSTMOT2](BOARD).0.encoder.01.index-mask-invert 0

#setp  hm2_[HOSTMOT2](BOARD).0.encoder.01.scale  [AXIS_1]INPUT_SCALE
#net motor.01.pos-fb hm2_[HOSTMOT2](BOARD).0.encoder.01.position => pid.1.feedback
#net motor.01.pos-fb => axis.1.motor-pos-fb #push copy back to Axis GUI

# set PID loop gains from inifile
#setp pid.1.Pgain [AXIS_1]P
#setp pid.1.Igain [AXIS_1]I
#setp pid.1.Dgain [AXIS_1]D
#setp pid.1.bias [AXIS_1]BIAS
#setp pid.1.FF0 [AXIS_1]FF0
#setp pid.1.FF1 [AXIS_1]FF1
#setp pid.1.FF2 [AXIS_1]FF2
#setp pid.1.deadband [AXIS_1]DEADBAND
#setp pid.1.maxoutput [AXIS_1]MAX_OUTPUT

# position command signals
#setp hm2_[HOSTMOT2](BOARD).0.pwmgen.01.output-type 1 #pwm on pin1, dir on pin2
#setp hm2_[HOSTMOT2](BOARD).0.pwmgen.01.scale [AXIS_1]OUTPUT_SCALE

#net emcmot.01.pos-cmd axis.1.motor-pos-cmd => pid.1.command
#net motor.01.command  pid.1.output  =>  hm2_[HOSTMOT2](BOARD).0.pwmgen.01.value


#
# Joint 1
#

net j1.cmd <= axis.1.motor-pos-cmd
net j1.cmd => scorbot-er-3.joint1.motor-pos-cmd
net j1.cmd => axis.1.motor-pos-fb

net j1.limit <= scorbot-er-3.joint1.limit-sw
net j1.limit => axis.1.home-sw-in
net j1.limit => axis.1.neg-lim-sw-in
net j1.limit => axis.1.pos-lim-sw-in

setp scorbot-er-3.joint1.scale [AXIS_1]SCALE


#
# Joint 2
#

net j2.cmd <= axis.2.motor-pos-cmd
net j2.cmd => scorbot-er-3.joint2.motor-pos-cmd
net j2.cmd => axis.2.motor-pos-fb

net j2.limit <= scorbot-er-3.joint2.limit-sw
net j2.limit => axis.2.home-sw-in
net j2.limit => axis.2.neg-lim-sw-in
net j2.limit => axis.2.pos-lim-sw-in

setp scorbot-er-3.joint2.scale [AXIS_2]SCALE


#
# Joint 3
#

net j3.cmd <= axis.3.motor-pos-cmd
net j3.cmd => scorbot-er-3.joint3.motor-pos-cmd
net j3.cmd => axis.3.motor-pos-fb

net j3.limit <= scorbot-er-3.joint3.limit-sw
net j3.limit => axis.3.home-sw-in
net j3.limit => axis.3.neg-lim-sw-in
net j3.limit => axis.3.pos-lim-sw-in

setp scorbot-er-3.joint3.scale [AXIS_3]SCALE


#
# Joint 4
#

net j4.cmd <= axis.4.motor-pos-cmd
net j4.cmd => scorbot-er-3.joint4.motor-pos-cmd
net j4.cmd => axis.4.motor-pos-fb

net j4.limit <= scorbot-er-3.joint4.limit-sw
net j4.limit => axis.4.home-sw-in
net j4.limit => axis.4.neg-lim-sw-in
net j4.limit => axis.4.pos-lim-sw-in

setp scorbot-er-3.joint4.scale [AXIS_4]SCALE


#
# Joint 5
#

net j5.cmd <= axis.5.motor-pos-cmd
net j5.cmd => scorbot-er-3.joint5.motor-pos-cmd
net j5.cmd => axis.5.motor-pos-fb

net j5.limit <= scorbot-er-3.joint5.limit-sw
net j5.limit => axis.5.home-sw-in
net j5.limit => axis.5.neg-lim-sw-in
net j5.limit => axis.5.pos-lim-sw-in

setp scorbot-er-3.joint5.scale [AXIS_5]SCALE


#
# Joint 6
#

net j6.cmd <= axis.6.motor-pos-cmd
net j6.cmd => scorbot-er-3.joint6.motor-pos-cmd
net j6.cmd => axis.6.motor-pos-fb

net j6.limit <= scorbot-er-3.joint6.limit-sw
net j6.limit => axis.6.home-sw-in
net j6.limit => axis.6.neg-lim-sw-in
net j6.limit => axis.6.pos-lim-sw-in

setp scorbot-er-3.joint6.scale [AXIS_6]SCALE


#
# Joint 7
#

net j7.cmd <= axis.7.motor-pos-cmd
net j7.cmd => scorbot-er-3.joint7.motor-pos-cmd
net j7.cmd => axis.7.motor-pos-fb

net j7.limit <= scorbot-er-3.joint7.limit-sw
net j7.limit => axis.7.home-sw-in
net j7.limit => axis.7.neg-lim-sw-in
net j7.limit => axis.7.pos-lim-sw-in

setp scorbot-er-3.joint7.scale [AXIS_7]SCALE
